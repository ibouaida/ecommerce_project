version: '3.9'

services:
  # Base de données PostgreSQL (même que production)
  db:
    image: postgres:15-alpine
    container_name: ecommerce_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ecommerce_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service Backend Django (mode développement)
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: ecommerce_backend_dev
    restart: unless-stopped
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=ecommerce.settings
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_password@db:5432/ecommerce_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3001,http://frontend:3001
    volumes:
      - .:/app
      - media_files_dev:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ecommerce_network_dev
    command: python manage.py runserver 0.0.0.0:8000

  # Service Frontend React (mode développement)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ecommerce_frontend_dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - ecommerce_network_dev
    command: npm start

  # Redis pour le développement
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - ecommerce_network_dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  media_files_dev:
    driver: local

networks:
  ecommerce_network_dev:
    driver: bridge 